plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'maven-publish'
    id 'signing'
}

android {
    namespace 'cc.imorning.silk'
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        externalNativeBuild {
            cmake {
                cppFlags '-std=c++17 -fexceptions -frtti'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    externalNativeBuild {
        cmake {
            path file('src/main/cpp/CMakeLists.txt')
            version '3.22.1'
        }
    }
    publishing {
        singleVariant('release') {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from android.sourceSets.main.java.getSrcDirs()
}
publishing {
    //repositories { RepositoryHandler handler ->
    //    handler.mavenLocal()
    //    // handler.maven()
    //}
    publications { PublicationContainer publication ->
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            groupId = "cc.imorning"
            artifactId = "silk"
            version = "1.0.0"
            pom {
                name = 'Silk Library'
                description = 'A library to decode and encode silk file'
                url = ''
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'iMorning'
                        name = 'iMorning'
                        email = 'morningos@foxmail.com'
                    }
                }
            }
            // afterEvaluate { artifact(tasks.getByName("bundleReleaseAar")) } // 方式一：生成aar包
            // artifact "$buildDir/outputs/aar/${project.name}-release.aar" // 方式二：指定生成的aar路径
        }
    }
}

dependencies {}